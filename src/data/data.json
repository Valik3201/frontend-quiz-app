{
  "quizzes": [
    {
      "title": "HTML",
      "icon": "/assets/icon-html.svg",
      "questions": [
        {
          "question": "What does HTML stand for?",
          "options": [
            "Hyper Trainer Marking Language",
            "Hyper Text Marketing Language",
            "Hyper Text Markup Language",
            "Hyper Text Markup Leveler"
          ],
          "answer": "Hyper Text Markup Language"
        },
        {
          "question": "Who is making the Web standards?",
          "options": [
            "The World Wide Web Consortium",
            "Mozilla",
            "Google",
            "Microsoft"
          ],
          "answer": "The World Wide Web Consortium"
        },
        {
          "question": "Which of the following is the correct structure for an HTML document?",
          "options": [
            "<html><head></head><body></body></html>",
            "<head><html></html><body></body></head>",
            "<body><head></head><html></html></body>",
            "<html><body></body><head></head></html>"
          ],
          "answer": "<html><head></head><body></body></html>"
        },
        {
          "question": "Which HTML element defines the title of a document?",
          "options": ["<title>", "<meta>", "<head>"],
          "answer": "<title>"
        },
        {
          "question": "Which HTML element is used to specify a header for a document or section?",
          "options": ["<head>", "<section>", "<header>", "<top>"],
          "answer": "<header>"
        },
        {
          "question": "What is the purpose of the <body> tag in HTML?",
          "options": [
            "It defines the document's head section.",
            "It contains all the content such as text, images, and links.",
            "It is used to define the main content of an HTML document.",
            "It specifies the body of the email content in HTML."
          ],
          "answer": "It contains all the content such as text, images, and links."
        },
        {
          "question": "Choose the correct HTML element for the largest heading:",
          "options": ["<h1>", "<head>", "<heading>", "<h6>"],
          "answer": "<h1>"
        },
        {
          "question": "What is the correct HTML for inserting an image?",
          "options": [
            "<img src=\"image.gif\" alt=\"MyImage\">",
            "<img href=\"image.gif\" alt=\"MyImage\">",
            "<imgage href=\"image.gif\" alt=\"MyImage\">",
            "<img alt=\"MyImage\">image.gif</img>"
          ],
          "answer": "<img src=\"image.gif\" alt=\"MyImage\">"
        },
        {
          "question": "Which HTML tag is used to create an unordered list?",
          "options": ["<ul>", "<ol>", "<list>", "<li>"],
          "answer": "<ul>"
        },
        {
          "question": "What is the correct HTML element for inserting a line break?",
          "options": ["<br>", "<break>", "<lb>", "<hr>"],
          "answer": "<br>"
        },
        {
          "question": "In HTML, you can embed SVG elements directly into an HTML page.",
          "options": ["True", "False"],
          "answer": "True"
        },
        {
          "question": "What is the correct HTML element for playing video files?",
          "options": ["<video>", "<media>", "<movie>"],
          "answer": "<video>"
        },
        {
          "question": "What is the correct HTML element for playing audio files?",
          "options": ["<audio>", "<mp3>", "<sound>"],
          "answer": "<audio>"
        },
        {
          "question": "In HTML, what does the `fieldset` tag do?",
          "options": [
            "It is used to group related data in a form.",
            "It sets the field to a fixed size.",
            "It automatically validates the fields within a form.",
            "It hides the fields in a form."
          ],
          "answer": "It is used to group related data in a form."
        },
        {
          "question": "What is the correct HTML for making a checkbox?",
          "options": [
            "<input type=\"checkbox\">",
            "<checkbox>",
            "<input type=\"check\">",
            "<check>"
          ],
          "answer": "<input type=\"checkbox\">"
        },
        {
          "question": "What is the correct HTML for making a text input field?",
          "options": [
            "<textfield>",
            "<textinput type=\"text\">",
            "<input type=\"text\">",
            "<input type=\"textfield\">"
          ],
          "answer": "<input type=\"text\">"
        },
        {
          "question": "What is the correct HTML for making a drop-down list?",
          "options": [
            "<select>",
            "<input type=\"list\">",
            "<list>",
            "<input type=\"dropdown\">"
          ],
          "answer": "<select>"
        },
        {
          "question": "Block elements are normally displayed without starting a new line.",
          "options": ["True", "False"],
          "answer": "False"
        },
        {
          "question": "Which of these elements are all <table> elements?",
          "options": [
            "<table><tr><td>",
            "<table><tr><tt>",
            "<table><head><tfoot>",
            "<thead><body><tr>"
          ],
          "answer": "<table><tr><td>"
        },
        {
          "question": "Choose the correct HTML element to define important text",
          "options": ["<strong>", "<b>", "<important>", "<i>"],
          "answer": "<strong>"
        },
        {
          "question": "Choose the correct HTML element to define emphasized text",
          "options": ["<em>", "<italic>", "<i>"],
          "answer": "<em>"
        },
        {
          "question": "Inline elements are normally displayed without starting a new line.",
          "options": ["True", "False"],
          "answer": "True"
        },
        {
          "question": "What is the correct HTML for making a text area?",
          "options": [
            "<textarea>",
            "<input type=\"textarea\">",
            "<input type=\"textbox\">"
          ],
          "answer": "<textarea>"
        },
        {
          "question": "An <iframe> is used to display a web page within a web page.",
          "options": ["False", "True", "There is no such thing as an <iframe>"],
          "answer": "True"
        },
        {
          "question": "The HTML global attribute, \"contenteditable\" is used to:",
          "options": [
            "Update content from the server",
            "Specify whether the content of an element should be editable or not",
            "Specifies a context menu for an element. The menu appears when a user right-clicks on the element",
            "Return the position of the first found occurrence of content inside a string"
          ],
          "answer": "Specify whether the content of an element should be editable or not"
        },
        {
          "question": "In HTML, onblur and onfocus are:",
          "options": ["Style attributes", "Event attributes", "HTML elements"],
          "answer": "Event attributes"
        },
        {
          "question": "The HTML <canvas> element is used to:",
          "options": [
            "draw graphics",
            "create draggable elements",
            "manipulate data in MySQL",
            "display database records"
          ],
          "answer": "draw graphics"
        },
        {
          "question": "Which input type defines a slider control?",
          "options": ["range", "slider", "controls", "search"],
          "answer": "range"
        },
        {
          "question": "Which HTML element is used to display a scalar measurement within a range?",
          "options": ["<meter>", "<range>", "<measure>", "<gauge>"],
          "answer": "<meter>"
        },
        {
          "question": "In HTML, what does the <aside> element define?",
          "options": [
            "A navigation list to be shown at the left side of the page",
            "Content aside from the page content",
            "The ASCII character-set; to send information between computers on the Internet"
          ],
          "answer": "Content aside from the page content"
        }
      ]
    },
    {
      "title": "CSS",
      "icon": "/assets/icon-css.svg",
      "questions": [
        {
          "question": "What does CSS stand for?",
          "options": [
            "Colorful Style Sheets",
            "Computer Style Sheets",
            "Cascading Style Sheets",
            "Creative Style Sheets"
          ],
          "answer": "Cascading Style Sheets"
        },
        {
          "question": "Where in an HTML document is the correct place to refer to an external style sheet?",
          "options": [
            "In the <head> section",
            "At the end of the document",
            "In the <body> section"
          ],
          "answer": "In the <head> section"
        },
        {
          "question": "Which HTML tag is used to define an internal style sheet?",
          "options": ["<style>", "<script>", "<css>"],
          "answer": "<style>"
        },
        {
          "question": "Which HTML attribute is used to define inline styles?",
          "options": ["style", "styles", "font", "class"],
          "answer": "style"
        },
        {
          "question": "How do you insert a comment in a CSS file?",
          "options": [
            "// this is a comment //",
            "/* this is a comment */",
            "-- this is a comment --",
            "<!-- this is a comment -->"
          ],
          "answer": "/* this is a comment */"
        },
        {
          "question": "Which property is used to change the background color of an element?",
          "options": ["color", "bgcolor", "background-color", "background"],
          "answer": "background-color"
        },
        {
          "question": "How do you apply a style to all <p> elements?",
          "options": ["p { }", ".p { }", "#p { }", "all.p { }"],
          "answer": "p { }"
        },
        {
          "question": "Which property is used to change the font of an element?",
          "options": ["font-style", "text-style", "font-family", "typeface"],
          "answer": "font-family"
        },
        {
          "question": "How do you make each word in a text start with a capital letter?",
          "options": [
            "text-transform: capitalize",
            "text-transform: uppercase",
            "font-transform: capitalize",
            "You can't do that with CSS"
          ],
          "answer": "text-transform: capitalize"
        },
        {
          "question": "How do you select an element with the class name 'header'?",
          "options": [".header", "#header", "header", "*header"],
          "answer": ".header"
        },
        {
          "question": "How do you select an element with id 'demo'?",
          "options": ["#demo", "*demo", "demo", ".demo"],
          "answer": "#demo"
        },
        {
          "question": "How do you add a background color for all <h1> elements?",
          "options": [
            "h1 {background-color:#FFFFFF;}",
            "all.h1 {background-color:#FFFFFF;}",
            "h1.all {background-color:#FFFFFF;}"
          ],
          "answer": "h1 {background-color:#FFFFFF;}"
        },
        {
          "question": "What is the default value of the 'position' property?",
          "options": ["relative", "fixed", "absolute", "static"],
          "answer": "static"
        },
        {
          "question": "What is the purpose of the z-index property in CSS?",
          "options": [
            "To count the number of elements",
            "To set the magnification level of an element",
            "To specify the stack order of an element",
            "To create a zoom effect"
          ],
          "answer": "To specify the stack order of an element"
        },
        {
          "question": "How do you display a border like this: \n\nThe top border = 10 pixels, \nThe bottom border = 5 pixels, \nThe left border = 20 pixels, \nThe right border = 1pixel?",
          "options": [
            "border-width: 10px 1px 5px 20px;",
            "border-width: 10px 5px 20px 1px;",
            "border-width: 10px 20px 5px 1px;",
            "border-width: 5px 20px 10px 1px;"
          ],
          "answer": "border-width: 10px 1px 5px 20px;"
        },
        {
          "question": "Which property is used to change the left margin of an element?",
          "options": ["margin-left", "padding-left", "indent"],
          "answer": "margin-left"
        },
        {
          "question": "When using the padding property; are you allowed to use negative values?",
          "options": ["No", "Yes"],
          "answer": "No"
        },
        {
          "question": "How do you make a list that lists its items with squares?",
          "options": [
            "list-type: square;",
            "list-style-type: square;",
            "list: square;"
          ],
          "answer": "list-style-type: square;"
        },
        {
          "question": "How do you select all p elements inside a div element?",
          "options": ["div p", "div.p", "div + p"],
          "answer": "div p"
        },

        {
          "question": "How do you group selectors?",
          "options": [
            "Separate each selector with a space",
            "Separate each selector with a comma",
            "Separate each selector with a plus sign"
          ],
          "answer": "Separate each selector with a comma"
        }
      ]
    },
    {
      "title": "JavaScript",
      "icon": "/assets/icon-js.svg",
      "questions": [
        {
          "question": "Which syntax is correct to output 'Hello World' in an alert box?",
          "options": [
            "alertBox('Hello World');",
            "msg('Hello World');",
            "alert('Hello World');",
            "msgBox('Hello World');"
          ],
          "answer": "alert('Hello World');"
        },
        {
          "question": "Where is the correct place to insert a JavaScript?",
          "options": [
            "Both the <head> section and the <body> section are correct",
            "The <head> section",
            "The <body> section"
          ],
          "answer": "Both the <head> section and the <body> section are correct"
        },
        {
          "question": "What is the correct syntax for referring to an external script called \"main.js\"?",
          "options": [
            "<script src=\"main.js\">",
            "<script name=\"main.js\">",
            "<script href=\"main.js\">"
          ],
          "answer": "<script src=\"main.js\">"
        },
        {
          "question": "The external JavaScript file must contain the <script> tag.",
          "options": ["True", "False"],
          "answer": "False"
        },
        {
          "question": "How do you call a function named 'myFunction'?",
          "options": [
            "call function myFunction()",
            "call myFunction()",
            "myFunction()",
            "execute myFunction()"
          ],
          "answer": "myFunction()"
        },
        {
          "question": "How to write an IF statement in JavaScript?",
          "options": ["if i = 5 then", "if (i == 5)", "if i == 5", "if i = 5"],
          "answer": "if (i == 5)"
        },
        {
          "question": "How to write an IF statement for executing some code if 'i' is NOT equal to 5?",
          "options": [
            "if (i <> 5)",
            "if i =! 5 then",
            "if (i != 5)",
            "if i not = 5"
          ],
          "answer": "if (i != 5)"
        },
        {
          "question": "How does a FOR loop start?",
          "options": [
            "for (i = 0; i <= 5)",
            "for i = 1 to 5",
            "for (i <= 5; i++)",
            "for (i = 0; i <= 5; i++)"
          ],
          "answer": "for (i = 0; i <= 5; i++)"
        },
        {
          "question": "How does a WHILE loop start?",
          "options": [
            "while (i <= 10)",
            "while (i <= 10; i++)",
            "while i = 1 to 10"
          ],
          "answer": "while (i <= 10)"
        },
        {
          "question": "How can you add a single-line comment in JavaScript?",
          "options": [
            "'This is a single-line comment",
            "//This is a single-line comment",
            "<!--This is a single-line comment-->",
            "/* This is a single-line comment */"
          ],
          "answer": "//This is a single-line comment"
        },
        {
          "question": "What is the correct way to write a JavaScript array?",
          "options": [
            "var colors = (1:'red', 2:'green', 3:'blue')",
            "var colors = ['red', 'green', 'blue']",
            "var colors = 'red', 'green', 'blue'",
            "var colors = 1 = ('red'), 2 = ('green'), 3 = ('blue')"
          ],
          "answer": "var colors = ['red', 'green', 'blue']"
        },
        {
          "question": "Which operator is used to assign a value to a variable?",
          "options": ["-", "*", "=", "x"],
          "answer": "="
        },
        {
          "question": "What is the correct way to write a JavaScript object?",
          "options": [
            "var person = {firstName: 'John', lastName: 'Doe'};",
            "var person = {firstName = 'John', lastName = 'Doe'};",
            "var person = (firstName: 'John', lastName: 'Doe');",
            "var person = (firstName = 'John', lastName = 'Doe');"
          ],
          "answer": "var person = {firstName: 'John', lastName: 'Doe'};"
        },
        {
          "question": "How do you round the number 7.25, to the nearest integer?",
          "options": [
            "Math.round(7.25)",
            "Math.rnd(7.25)",
            "rnd(7.25)",
            "round(7.25)"
          ],
          "answer": "Math.round(7.25)"
        },
        {
          "question": "How do you find the number with the highest value of x and y?",
          "options": [
            "Math.max(x, y)",
            "ceil(x, y)",
            "top(x, y)",
            "Math.ceil(x, y)"
          ],
          "answer": "Math.max(x, y)"
        },
        {
          "question": "What is the correct JavaScript syntax for opening a new window called \"w2\"?",
          "options": [
            "w2 = window.new(\"http://www.w3schools.com\");",
            "w2 = window.open(\"http://www.w3schools.com\");"
          ],
          "answer": "w2 = window.open(\"http://www.w3schools.com\");"
        },
        {
          "question": "How can you detect the client's browser name?",
          "options": ["browser.name", "navigator.appName", "client.navName"],
          "answer": "navigator.appName"
        },
        {
          "question": "Which event occurs when the user clicks on an HTML element?",
          "options": ["onclick", "onmouseclick", "onmouseover", "onchange"],
          "answer": "onclick"
        },
        {
          "question": "What is the output of the following JavaScript code?\n\n```(function() {\n    var a = b = 5;\n})();\n\nconsole.log(b);\n```",
          "options": ["ReferenceError", "undefined", "5", "TypeError"],
          "answer": "5"
        },
        {
          "question": "How can you create an object in JavaScript with a prototype?",
          "options": [
            "var obj = Object.create(proto);",
            "var obj = new proto();",
            "var obj = proto.create();",
            "var obj = proto.prototype();"
          ],
          "answer": "var obj = Object.create(proto);"
        },
        {
          "question": "What is the difference between '==' and '===' in JavaScript?",
          "options": [
            "'==' checks for value equality, while '===' checks for both value and type equality.",
            "'==' checks for type equality, while '===' checks for value equality.",
            "Both '==' and '===' check for both value and type equality.",
            "'==' checks for value equality, while '===' is used for variable assignment."
          ],
          "answer": "'==' checks for value equality, while '===' checks for both value and type equality."
        },
        {
          "question": "Which method is used to parse a JSON string into a JavaScript object?",
          "options": [
            "JSON.parse()",
            "JSON.stringify()",
            "JSON.convert()",
            "JSON.toObject()"
          ],
          "answer": "JSON.parse()"
        },
        {
          "question": "What will be the output of the following JavaScript code?\n\n```console.log(0.1 + 0.2 === 0.3);\n```",
          "options": ["true", "false", "undefined", "NaN"],
          "answer": "false"
        },
        {
          "question": "What will be the output of the following JavaScript code?\n\n```console.log(typeof NaN);\n```",
          "options": ["number", "NaN", "undefined", "object"],
          "answer": "number"
        },
        {
          "question": "What is the result of the following code?\n\n```let a = [1, 2, 3];\nlet b = a;\nb.push(4);\nconsole.log(a === b);\n```",
          "options": ["true", "false", "ReferenceError", "TypeError"],
          "answer": "true"
        }
      ]
    },
    {
      "title": "Accessibility",
      "icon": "/assets/icon-accessibility.svg",
      "questions": [
        {
          "question": "What does 'WCAG' stand for?",
          "options": [
            "Web Content Accessibility Guidelines",
            "Web Compliance Accessibility Guide",
            "Web Content Accessibility Goals",
            "Website Compliance and Accessibility Guidelines"
          ],
          "answer": "Web Content Accessibility Guidelines"
        },
        {
          "question": "Which element is used to provide alternative text for images for screen reader users?",
          "options": [
            "<alt>",
            "<figcaption>",
            "<description>",
            "<img alt='description'>"
          ],
          "answer": "<img alt='description'>"
        },
        {
          "question": "What does ARIA stand for in web development?",
          "options": [
            "Accessible Rich Internet Applications",
            "Advanced Responsive Internet Assistance",
            "Accessible Responsive Internet Applications",
            "Automated Responsive Internet Actions"
          ],
          "answer": "Accessible Rich Internet Applications"
        },
        {
          "question": "Which of the following is not a principle of the WCAG?",
          "options": [
            "Perceivable",
            "Dependable",
            "Operable",
            "Understandable"
          ],
          "answer": "Dependable"
        },
        {
          "question": "Which of these color contrast ratios defines the minimum WCAG 2.1 Level AA requirement for normal text?",
          "options": ["3:1", "4.5:1", "7:1", "2:1"],
          "answer": "4.5:1"
        },
        {
          "question": "Which of the following elements is inherently focusable, meaning it can receive focus without a 'tabindex' attribute?",
          "options": ["<div>", "<span>", "<a href='...'>", "<p>"],
          "answer": "<a href='...'>"
        },
        {
          "question": "What is the purpose of the 'lang' attribute in an HTML page?",
          "options": [
            "To specify the scripting language",
            "To define the character set",
            "To indicate the language of the page content",
            "To declare a language pack"
          ],
          "answer": "To indicate the language of the page content"
        },
        {
          "question": "Which guideline ensures that content is accessible by keyboard as well as by mouse?",
          "options": [
            "Keyboard Accessible",
            "Mouse Independence",
            "Device Independence",
            "Operable Controls"
          ],
          "answer": "Keyboard Accessible"
        },
        {
          "question": "What is the role of 'skip navigation' links in web accessibility?",
          "options": [
            "To skip over primary navigation to the main content",
            "To provide shortcuts to different sections of the website",
            "To help users skip unwanted sections like advertisements",
            "To bypass broken links in the navigation"
          ],
          "answer": "To skip over primary navigation to the main content"
        },
        {
          "question": "Which of these tools can help in checking the accessibility of a website?",
          "options": [
            "W3C Validator",
            "Google Lighthouse",
            "CSS Validator",
            "JavaScript Console"
          ],
          "answer": "Google Lighthouse"
        }
      ]
    },
    {
      "title": "React",
      "icon": "/assets/icon-react.svg",
      "questions": [
        {
          "question": "What is the correct command to create a new React project?",
          "options": [
            "npx create-react-app myReactApp",
            "npx create-react-app",
            "npm create-react-app myReactApp",
            "npm create-react-app"
          ],
          "answer": "npx create-react-app myReactApp"
        },
        {
          "question": "What does myReactApp refer to in the following command?\n\n```npx create-react-app myReactApp\n```",
          "options": [
            "The directory to create the new app in",
            "The type of app to create",
            "A reference to an existing app",
            "The name you want to use for the new app"
          ],
          "answer": "The name you want to use for the new app"
        },
        {
          "question": "What command is used to start the React local development server?",
          "options": ["npm start", "npm build", "npm run dev", "npm serve"],
          "answer": "npm start"
        },
        {
          "question": "What is the default local host port that a React development server uses?",
          "options": ["3000", "3500", "5000", "8080"],
          "answer": "3000"
        },
        {
          "question": "To develop and run React code, Node.js is required.",
          "options": ["True", "False"],
          "answer": "True"
        },
        {
          "question": "What is the children prop?",
          "options": [
            "A property that lets you set an object as a property",
            "A property that lets you pass data to child components",
            "A property that adds child values to state",
            "A property that lets you nest components in other components"
          ],
          "answer": "A property that lets you nest components in other components"
        },
        {
          "question": "Which keyword creates a constant in JavaScript?",
          "options": ["const", "var", "let", "constant"],
          "answer": "const"
        },
        {
          "question": "A copy of the 'real' DOM that is kept in memory is called what?",
          "options": ["Virtual DOM", "DOM", "React DOM", "Shadow DOM"],
          "answer": "Virtual DOM"
        },
        {
          "question": "React component names must begin with an uppercase letter.",
          "options": ["True", "False"],
          "answer": "True"
        },
        {
          "question": "Which operator can be used to conditionally render a React component?",
          "options": ["&&", "::", "||", "??"],
          "answer": "&&"
        },
        {
          "question": "When rendering a list using the JavaScript map() method, what is required for each element rendered?",
          "options": ["key", "id", "index", "data"],
          "answer": "key"
        },
        {
          "question": "What tool does React use to compile JSX?",
          "options": ["Babel", "React Router", "JSX Compiler", "ReactDOM"],
          "answer": "Babel"
        },
        {
          "question": "How can you optimize performance for a function component that always renders the same way?",
          "options": [
            "Use the useMemo Hook.",
            "Use the useReducer Hook.",
            "Use the shouldComponentUpdate lifecycle method.",
            "Wrap it in the React.memo higher-order component."
          ],
          "answer": "Wrap it in the React.memo higher-order component."
        },
        {
          "question": "What props will be available to the following component?\n\n```<Car {...props} />\n```",
          "options": [
            "all of them",
            "children",
            "only static ones",
            "only updated ones"
          ],
          "answer": "all of them"
        },
        {
          "question": "What is a common use case for ref?",
          "options": [
            "To bind the function",
            "To refer to a function",
            "To refer to another JavaScript file",
            "To directly access a DOM node"
          ],
          "answer": "To directly access a DOM node"
        },
        {
          "question": "How can you combine the following arrays using the spread operator?\n\n```const array1 = [1, 2, 3];\nconst array2 = [4, 5, 6];\n```",
          "options": [
            "const combined = [...array1, ...array2];",
            "const combined = [array1, array2];",
            "const combined = ...array1 + ...array2;",
            "const combined = array1 + array2;"
          ],
          "answer": "const combined = [...array1, ...array2];"
        },
        {
          "question": "React can only render elements in the root document element.",
          "options": ["True", "False"],
          "answer": "False"
        },
        {
          "question": "What is the correct syntax to import a Component from React?",
          "options": [
            "import { Component } from 'react'",
            "import React.Component from 'react'",
            "import Component from 'react'",
            "import [ Component ] from 'react'"
          ],
          "answer": "import { Component } from 'react'"
        },
        {
          "question": "Find the bug in this code:\n\n```function car({make, model}) {\n  return <h1>{make} {model}</h1>;\n};\n```",
          "options": [
            "The first letter of the function must be capitalized",
            "Remove the return statement",
            "Add parenthesis around the return value",
            "Wrap the return in a fragment"
          ],
          "answer": "The first letter of the function must be capitalized"
        },
        {
          "question": "React separates the user interface into components. How are components combined to create a user interface?",
          "options": [
            "By nesting components",
            "By putting them in a folder structure",
            "With webpack",
            "With code splitting"
          ],
          "answer": "By nesting components"
        },
        {
          "question": "Although React Hooks generally replace class components, there are no plans to remove classes from React.",
          "options": ["False", "True"],
          "answer": "True"
        },
        {
          "question": "Which of the following is NOT a rule for React Hooks?",
          "options": [
            "Hooks cannot be conditional",
            "Hooks can only be called inside React Function components",
            "Hooks can be called in Class or Function components",
            "Hooks can only be called at the top level of a component"
          ],
          "answer": "Hooks can be called in Class or Function components"
        },
        {
          "question": "What is the output of the following code?\n\n```const make = 'Ford';\nconst model = 'Mustang';\nconst car = { make, model };\nconsole.log(car);\n```",
          "options": [
            "{make: 'Ford', model: 'Mustang'}",
            "{{make: 'Ford', model: 'Mustang'}}",
            "{car: 'Ford', car: 'Mustang'}}",
            "{car: {make: 'Ford', model: 'Mustang'}}"
          ],
          "answer": "{make: 'Ford', model: 'Mustang'}"
        },
        {
          "question": "Why should you avoid copying the values of props into a component's state?",
          "options": [
            "Because you want to allow data to flow back up to the parent",
            "Because that would create two instances of the same state that could become out of sync",
            "Because you should never mutate state",
            "Because prop values cannot be stored in state"
          ],
          "answer": "Because that would create two instances of the same state that could become out of sync"
        },
        {
          "question": "What is the purpose of the useEffect Hook in the following code?\n\n```useEffect(() => {\n  document.title = `Count: ${count}`;\n}, [count]);\n```",
          "options": [
            "To update the document title when count changes",
            "To fetch data from an API",
            "To manipulate the DOM",
            "To handle form submissions"
          ],
          "answer": "To update the document title when count changes"
        }
      ]
    }
  ]
}
